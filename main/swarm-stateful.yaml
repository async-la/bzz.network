apiVersion: v1
kind: Service
metadata:
  name: swarm
  labels:
    app: swarm
spec:
  ports:
  - port: 8500
    targetPort: 8500
  selector:
    app: swarm
  clusterIP: None
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: swarm
spec:
  serviceName: "swarm"
  replicas: 2
  selector:
    matchLabels:
      app: swarm
  template:
    metadata:
      labels:
        app: swarm
    spec:
      containers:
      - image: ethereum/client-go:alltools-v1.8.3
        name: swarm
        env:
          - name: BZZ_KEY
            valueFrom:
              secretKeyRef:
                name: geth
                key: bzz-key
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        command: ["swarm"]
        args:
          - "--bzzaccount=$(BZZ_KEY)"
          - "--datadir=/mnt/efs"
          - "--ens-api=http://geth:8545"
          - "--keystore=/mnt/geth/keystore"
          - "--password=/etc/geth/password"
          - "--httpaddr=0.0.0.0"
          - "--bootnodes=enode://e85104f55917d4a58d3603ecedeff744514cc25fde9e2945b5c89331aae2753b0bff61f14aa132d1dfe2c7957a9c7a895fbd7a6a8ed75506ef69635164995620@100.96.4.2:30399"
        resources:
          requests:
            cpu: "10m"
            memory: "3Gi"
        ports:
        - containerPort: 8500
        volumeMounts:
        - name: efs-geth
          mountPath: "/mnt/geth"
          readOnly: true
        - name: efs
          mountPath: "/mnt/efs"
        - name: geth
          mountPath: "/etc/geth"
          readOnly: true
      volumes:
      - name: efs-geth
        persistentVolumeClaim:
          claimName: efs
      - name: geth
        secret:
          secretName: geth
  volumeClaimTemplates:
  - metadata:
      name: efs
      annotations:
        volume.beta.kubernetes.io/storage-class: aws-efs
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Mi
